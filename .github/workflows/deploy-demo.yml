name: Deploy Demo

on:
  schedule:
    - cron: "0 2 * * *" # Runs at 2 AM UTC every day
  workflow_dispatch: # Allows manual triggering

env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}

jobs:
  cleanup:
    name: Cleanup Previous Demo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Serverless
        run: export SERVERLESS_ACCESS_KEY="$SERVERLESS_ACCESS_KEY"

      - name: Remove Previous Demo Stack
        run:
          |
          npm install -g serverless
          serverless remove --stage demo --verbose || echo "No existing stack to remove"

      - name: Reset and Initialize Database
        run:
          |
          # Get connection string from Parameter Store
          CONNECTION_STRING=$(aws ssm get-parameter --name "/demo/doingApi/connectionString" --with-decryption --query "Parameter.Value" --output text)
          DB_NAME=$(echo $CONNECTION_STRING | sed -n 's/.*\/\/[^:]*:[^@]*@[^:]*:[0-9]*\/\([^?]*\).*/\1/p')
          DB_HOST=$(echo $CONNECTION_STRING | sed -n 's/.*@\([^:]*\):[0-9]*\/.*/\1/p')
          DB_USER=$(echo $CONNECTION_STRING | sed -n 's/.*:\/\/\([^:]*\):.*/\1/p')
          DB_PASS=$(echo $CONNECTION_STRING | sed -n 's/.*:\/\/[^:]*:\([^@]*\)@.*/\1/p')
          mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" -e "DROP DATABASE IF EXISTS ${DB_NAME}; CREATE DATABASE ${DB_NAME};"
          echo "APP_ENV=Demo" > .env
          echo "CONNECTION_STRING=$CONNECTION_STRING" >> .env
          npm install
          npm run initdb
          mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASS" "$DB_NAME" < tools/dbScripts/demo.mysql

  deploy:
    name: Deploy Demo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys:
            |
            ${{ runner.os }}-node-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Serverless
        run:
          |
          export SERVERLESS_ACCESS_KEY="$SERVERLESS_ACCESS_KEY"

      - name: Deploy API
        run:
          |
          npm install
          npm run deploy-demo
